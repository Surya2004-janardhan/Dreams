const axios = require("axios");
require("dotenv").config();

// Mock logger to avoid requiring the full service
const logger = {
  info: (msg) => console.log(`‚ÑπÔ∏è ${msg}`),
  warn: (msg) => console.log(`‚ö†Ô∏è ${msg}`),
  error: (msg) => console.log(`‚ùå ${msg}`),
};

async function testFacebookDummyUpload() {
  try {
    console.log("üß™ Testing Facebook upload with dummy video...");

    // Required environment variables
    const accessToken = process.env.FACEBOOK_ACCESS_TOKEN;
    const pageId = process.env.FACEBOOK_PAGE_ID;

    if (!accessToken || !pageId) {
      throw new Error(
        "FACEBOOK_ACCESS_TOKEN and FACEBOOK_PAGE_ID environment variables are required"
      );
    }

    console.log("üìò Environment variables found, proceeding with test...");

    // First, get the page access token
    console.log("üîë Getting page access token...");
    const pageTokenUrl = `https://graph.facebook.com/v23.0/${pageId}?fields=access_token&access_token=${accessToken}`;
    const pageTokenResponse = await axios.get(pageTokenUrl);
    const pageAccessToken = pageTokenResponse.data.access_token;

    if (!pageAccessToken) {
      throw new Error(
        "Could not obtain page access token. Make sure you're a page admin."
      );
    }

    console.log("‚úÖ Page access token obtained");

    // For testing, we'll use a publicly accessible video URL that's known to work
    const publicVideoUrl = "https://www.w3schools.com/html/mov_bbb.mp4";
    console.log(`üîó Using test video URL: ${publicVideoUrl}`);

    // Step 1: Create video post using Facebook Graph API with PAGE access token
    const apiUrl = `https://graph.facebook.com/v23.0/${pageId}/videos`;
    const postParams = {
      file_url: publicVideoUrl,
      description:
        "ü§ñ TEST: Dummy Video Upload - Educational Content Automation\n\nThis is an automated test upload to verify Facebook integration is working properly. Generated by AI content automation system.",
      access_token: pageAccessToken, // Use PAGE access token, not user token
    };

    logger.info("üìπ Publishing video to Facebook page...");
    const postResponse = await axios.post(apiUrl, postParams);
    const postId = postResponse.data.id;

    logger.info(`‚úÖ Facebook video published. Post ID: ${postId}`);

    // Step 2: Get the permalink
    const permalinkUrl = `https://graph.facebook.com/v23.0/${postId}?fields=permalink_url&access_token=${pageAccessToken}`;
    const permalinkResponse = await axios.get(permalinkUrl);
    const postUrl = permalinkResponse.data.permalink_url;

    logger.info(`üîó Facebook post URL: ${postUrl}`);

    console.log("‚úÖ Facebook upload test result:", {
      success: true,
      url: postUrl,
      postId: postId,
    });

    console.log("üéâ SUCCESS: Facebook post created!");
    console.log(`üîó Facebook Post URL: ${postUrl}`);
  } catch (error) {
    console.error("‚ùå Facebook dummy upload test failed:", error.message);
    if (error.response) {
      console.error("Response data:", error.response.data);
      console.error("Response status:", error.response.status);
    }
    console.error("Stack:", error.stack);
  }
}

// Run the test
if (require.main === module) {
  testFacebookDummyUpload();
}

module.exports = { testFacebookDummyUpload };
